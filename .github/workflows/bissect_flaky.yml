# generated by praktika

name: BisectFlaky
on:
  workflow_dispatch:
    inputs:
      sha_from:
        description: Start of a commits range
        required: true
        default: auto
      sha_to:
        description: End of a commits range
        required: true
        default: auto
      test_names:
        description: List of flaky tests
        required: true
        default: auto

env:
  PYTHONUNBUFFERED: 1
  CHECKOUT_REF: ""

jobs:

  stateless_tests_arm_asan_bisect:
    runs-on: [self-hosted, func-tester-aarch64]
    needs: []
    name: "Stateless tests (arm_asan, bisect)"
    outputs:
      data: ${{ steps.run.outputs.DATA }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.CHECKOUT_REF }}

      - name: Prepare env script
        run: |
          rm -rf ./ci/tmp ./ci/tmp ./ci/tmp
          mkdir -p ./ci/tmp ./ci/tmp ./ci/tmp
          cat > ./ci/tmp/praktika_setup_env.sh << 'ENV_SETUP_SCRIPT_EOF'
          export PYTHONPATH=./ci:.:
          cat > ./ci/tmp/workflow_inputs.json << 'EOF'
          ${{ toJson(github.event.inputs) }}
          EOF
          cat > ./ci/tmp/workflow_status.json << 'EOF'
          ${{ toJson(needs) }}
          EOF
          ENV_SETUP_SCRIPT_EOF

      - name: Run
        id: run
        run: |
          . ./ci/tmp/praktika_setup_env.sh
          set -o pipefail
          if command -v ts &> /dev/null; then
            python3 -m praktika run 'Stateless tests (arm_asan, bisect)' --workflow "BisectFlaky" --ci |& ts '[%Y-%m-%d %H:%M:%S]' | tee ./ci/tmp/job.log
          else
            python3 -m praktika run 'Stateless tests (arm_asan, bisect)' --workflow "BisectFlaky" --ci |& tee ./ci/tmp/job.log
          fi
